/*
 * Unity Catalog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct CreateVolumeRequestContent {
    /// The name of the catalog where the schema and the volume are
    #[serde(rename = "catalog_name")]
    pub catalog_name: String,
    /// The name of the schema where the volume is
    #[serde(rename = "schema_name")]
    pub schema_name: String,
    /// The name of the volume
    #[serde(rename = "name")]
    pub name: String,
    #[serde(rename = "volume_type")]
    pub volume_type: models::VolumeType,
    /// The comment attached to the volume
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// The storage location of the volume
    #[serde(rename = "storage_location")]
    pub storage_location: String,
}

impl CreateVolumeRequestContent {
    pub fn new(catalog_name: String, schema_name: String, name: String, volume_type: models::VolumeType, storage_location: String) -> CreateVolumeRequestContent {
        CreateVolumeRequestContent {
            catalog_name,
            schema_name,
            name,
            volume_type,
            comment: None,
            storage_location,
        }
    }
}

