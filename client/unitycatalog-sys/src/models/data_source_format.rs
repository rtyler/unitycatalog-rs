/*
 * Unity Catalog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

/// DataSourceFormat : Data source format
/// Data source format
#[derive(Clone, Copy, Debug, Eq, PartialEq, Ord, PartialOrd, Hash, Serialize, Deserialize)]
pub enum DataSourceFormat {
    #[serde(rename = "DELTA")]
    Delta,
    #[serde(rename = "CSV")]
    Csv,
    #[serde(rename = "JSON")]
    Json,
    #[serde(rename = "AVRO")]
    Avro,
    #[serde(rename = "PARQUET")]
    Parquet,
    #[serde(rename = "ORC")]
    Orc,
    #[serde(rename = "TEXT")]
    Text,

}

impl std::fmt::Display for DataSourceFormat {
    fn fmt(&self, f: &mut std::fmt::Formatter) -> std::fmt::Result {
        match self {
            Self::Delta => write!(f, "DELTA"),
            Self::Csv => write!(f, "CSV"),
            Self::Json => write!(f, "JSON"),
            Self::Avro => write!(f, "AVRO"),
            Self::Parquet => write!(f, "PARQUET"),
            Self::Orc => write!(f, "ORC"),
            Self::Text => write!(f, "TEXT"),
        }
    }
}

impl Default for DataSourceFormat {
    fn default() -> DataSourceFormat {
        Self::Delta
    }
}

