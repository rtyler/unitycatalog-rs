/*
 * Unity Catalog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct VolumeInfo {
    /// The name of the catalog where the schema and the volume are
    #[serde(rename = "catalog_name", skip_serializing_if = "Option::is_none")]
    pub catalog_name: Option<String>,
    /// The name of the schema where the volume is
    #[serde(rename = "schema_name", skip_serializing_if = "Option::is_none")]
    pub schema_name: Option<String>,
    /// The name of the volume
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// The comment attached to the volume
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Time at which this volume was created, in epoch milliseconds.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
    /// Time at which this volume was last modified, in epoch milliseconds.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
    /// Unique identifier for the volume
    #[serde(rename = "volume_id", skip_serializing_if = "Option::is_none")]
    pub volume_id: Option<String>,
    #[serde(rename = "volume_type", skip_serializing_if = "Option::is_none")]
    pub volume_type: Option<models::VolumeType>,
    /// The storage location of the volume
    #[serde(rename = "storage_location", skip_serializing_if = "Option::is_none")]
    pub storage_location: Option<String>,
    /// Full name of volume, in form of __catalog_name__.__schema_name__.__volume_name__.
    #[serde(rename = "full_name", skip_serializing_if = "Option::is_none")]
    pub full_name: Option<String>,
}

impl VolumeInfo {
    pub fn new() -> VolumeInfo {
        VolumeInfo {
            catalog_name: None,
            schema_name: None,
            name: None,
            comment: None,
            created_at: None,
            updated_at: None,
            volume_id: None,
            volume_type: None,
            storage_location: None,
            full_name: None,
        }
    }
}

