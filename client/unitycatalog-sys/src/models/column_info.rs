/*
 * Unity Catalog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct ColumnInfo {
    /// Name of Column.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Full data type specification as SQL/catalogString text.
    #[serde(rename = "type_text", skip_serializing_if = "Option::is_none")]
    pub type_text: Option<String>,
    /// Full data type specification, JSON-serialized.
    #[serde(rename = "type_json", skip_serializing_if = "Option::is_none")]
    pub type_json: Option<String>,
    #[serde(rename = "type_name", skip_serializing_if = "Option::is_none")]
    pub type_name: Option<models::ColumnTypeName>,
    /// Digits of precision; required for DecimalTypes.
    #[serde(rename = "type_precision", skip_serializing_if = "Option::is_none")]
    pub type_precision: Option<i32>,
    /// Digits to right of decimal; Required for DecimalTypes.
    #[serde(rename = "type_scale", skip_serializing_if = "Option::is_none")]
    pub type_scale: Option<i32>,
    /// Format of IntervalType.
    #[serde(rename = "type_interval_type", skip_serializing_if = "Option::is_none")]
    pub type_interval_type: Option<String>,
    /// Ordinal position of column (starting at position 0).
    #[serde(rename = "position", skip_serializing_if = "Option::is_none")]
    pub position: Option<i32>,
    /// User-provided free-form text description.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// Whether field may be Null.
    #[serde(rename = "nullable", skip_serializing_if = "Option::is_none")]
    pub nullable: Option<bool>,
    /// Partition index for column.
    #[serde(rename = "partition_index", skip_serializing_if = "Option::is_none")]
    pub partition_index: Option<i32>,
}

impl ColumnInfo {
    pub fn new() -> ColumnInfo {
        ColumnInfo {
            name: None,
            type_text: None,
            type_json: None,
            type_name: None,
            type_precision: None,
            type_scale: None,
            type_interval_type: None,
            position: None,
            comment: None,
            nullable: None,
            partition_index: None,
        }
    }
}

