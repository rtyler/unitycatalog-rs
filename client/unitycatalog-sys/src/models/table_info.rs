/*
 * Unity Catalog API
 *
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1
 * 
 * Generated by: https://openapi-generator.tech
 */

use crate::models;
use serde::{Deserialize, Serialize};

#[derive(Clone, Default, Debug, PartialEq, Serialize, Deserialize)]
pub struct TableInfo {
    /// Name of table, relative to parent schema.
    #[serde(rename = "name", skip_serializing_if = "Option::is_none")]
    pub name: Option<String>,
    /// Name of parent catalog.
    #[serde(rename = "catalog_name", skip_serializing_if = "Option::is_none")]
    pub catalog_name: Option<String>,
    /// Name of parent schema relative to its parent catalog.
    #[serde(rename = "schema_name", skip_serializing_if = "Option::is_none")]
    pub schema_name: Option<String>,
    #[serde(rename = "table_type", skip_serializing_if = "Option::is_none")]
    pub table_type: Option<models::TableType>,
    #[serde(rename = "data_source_format", skip_serializing_if = "Option::is_none")]
    pub data_source_format: Option<models::DataSourceFormat>,
    /// The array of __ColumnInfo__ definitions of the table's columns.
    #[serde(rename = "columns", skip_serializing_if = "Option::is_none")]
    pub columns: Option<Vec<models::ColumnInfo>>,
    /// Storage root URL for table (for **MANAGED**, **EXTERNAL** tables)
    #[serde(rename = "storage_location", skip_serializing_if = "Option::is_none")]
    pub storage_location: Option<String>,
    /// User-provided free-form text description.
    #[serde(rename = "comment", skip_serializing_if = "Option::is_none")]
    pub comment: Option<String>,
    /// A map of key-value properties attached to the securable.
    #[serde(rename = "properties", skip_serializing_if = "Option::is_none")]
    pub properties: Option<std::collections::HashMap<String, String>>,
    /// Time at which this table was created, in epoch milliseconds.
    #[serde(rename = "created_at", skip_serializing_if = "Option::is_none")]
    pub created_at: Option<i64>,
    /// Time at which this table was last modified, in epoch milliseconds.
    #[serde(rename = "updated_at", skip_serializing_if = "Option::is_none")]
    pub updated_at: Option<i64>,
    /// Unique identifier for the table.
    #[serde(rename = "table_id", skip_serializing_if = "Option::is_none")]
    pub table_id: Option<String>,
}

impl TableInfo {
    pub fn new() -> TableInfo {
        TableInfo {
            name: None,
            catalog_name: None,
            schema_name: None,
            table_type: None,
            data_source_format: None,
            columns: None,
            storage_location: None,
            comment: None,
            properties: None,
            created_at: None,
            updated_at: None,
            table_id: None,
        }
    }
}

